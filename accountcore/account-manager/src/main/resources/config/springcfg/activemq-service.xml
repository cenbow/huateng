<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	
	
	
	<bean id="reqSms" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.reqSms}" />
	</bean>
    <bean id="reqRisk" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${jms.queue.reqRisk}" />
    </bean>
	
	<bean id="rcvSms" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.rcvSms}" />
	</bean>

	
	
    <bean id="destinationMap" class="java.util.HashMap">
        <constructor-arg>
             <map>
                 <!--suppress InjectionValueTypeInspection -->
                <entry key="reqRisk" value-ref="reqRisk"/>
                 <!--suppress InjectionValueTypeInspection -->
                <entry key="9999" value-ref="reqSms" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="respDestMap" class="java.util.HashMap">
        <constructor-arg>
             <map>
                <!--suppress InjectionValueTypeInspection -->
                 <entry key="9999" value-ref="rcvSms" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="activeMqTemplateComponent"
        class="com.huateng.p3.account.component.ActiveMqTemplateComponent"  scope="prototype">
        <property name="template" ref="jmsTemplate" />
        <property name="destinationMap">
            <ref local="destinationMap" />
        </property>
        <property name="respDestMap">
            <ref local="respDestMap" />
        </property>
        <property name="jmsTemplate4async" ref="jmsTemplate4async" />
    </bean>



    <!-- 配置JMS连接工厂 -->
    <!-- 采用TCP长连接方式, 避免每次建立短连接需要的额外工作时间 -->
    <bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
       <!--  <property name="maxConnections" value="2" /> -->
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>
    <!-- 采用TCP长连接方式, 避免每次建立短连接需要的额外工作时间 用于发送响应的 -->
    <bean id="connectionFactory4reply" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>
    <!-- 采用TCP长连接方式, 用于异步发送消息 -->
    <bean id="connectionFactory4async" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="maxConnections" value="2" />
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>


    <!-- 配置JMS模版 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="receiveTimeout" value="${jms.revieve.timeout}" />
        <property name="deliveryMode" value="2" />
        <property name="explicitQosEnabled" value="true" />
        <property name="timeToLive" value="${jms.time.tolive}" />
    </bean>
    <bean id="jmsTemplate4async" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory4async" />
        <property name="receiveTimeout" value="${jms.revieve.timeout}" />
        <property name="deliveryMode" value="1" />
        <property name="explicitQosEnabled" value="true" />
        <property name="timeToLive" value="${jms.async.tolive}" />
    </bean>
    
    

    <!-- 监听器 -->
     <!--  <bean id="smsMessageListener"
        class="com.huateng.p3.account.common.tools.activemq.JmsClientRecvListener">
        <property name="clientrecv" ref="activeMqTemplateComponent" />
    </bean>
	
    <bean id="smsListenerContainer"
        class="com.huateng.p3.account.common.tools.activemq.JmsReplyMsgListenerContainer">
        <property name="concurrentConsumers" value="5" />
        <property name="maxConcurrentConsumers" value="50" />
        <property name="connectionFactory" ref="connectionFactory4reply" />
        <property name="destination" ref="rcvSms" />
        <property name="messageListener" ref="smsMessageListener" />
    </bean>
 -->
   
	
	
	
</beans>
